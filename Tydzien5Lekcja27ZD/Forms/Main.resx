<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAN0AAADdAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////ABsaGsQLCgr8BwYG+gICAv4ICAj4CAgI+AgICPgBAQH+AAAA/wYGBvoICAj4CAgI+AYG
        BvoDAwP9CAgI+AgHB/MMDAv4CgkJ+gMDA/0GBgb6CQgI+AkICPgGBgb6AAAA/wEBAf4ICAj4CAgI+AgI
        CPgCAgL9BwcH+QgICPgPDw65CwoK/Org2//Jvrn/PTo4//jq5P/46uT/oZiZ/wwMJv8hIXH/MjA4//Dj
        3f/46uT/sqik/1VQTv/46uT/g3x5/3l0cv/z5uH/VVBO/7KopP/46uT/8OPd/ygnOP8dHXD/EhEk/6Ob
        mP/46uT/+Ork/z06OP/Jvrn/+Ork/wgHB/gLCgr86uDb/8m+uf89Ojj/+Ork//jq5P8QDx7/NTXN/1BQ
        //8gIFD/o5qW//jq5P+yqKT/VVBO//jq5P+DfHn/eXRy//Pm4f9VUE7/sqik//jq5P+jmpb/FBRN/0hI
        +f9ERNn/FxYe//jq5P/46uT/PTo4/8m+uf/46uT/CAcH+AsKCvzq4Nv/yb65/z06OP/46uT/+Ork/yAf
        M/8yMsf/UFD//yQjS/+6r6v/+Ork/7KopP9VUE7/+Ork/4N8ef95dHL/8+bh/1VQTv+yqKT/+Ork/7qv
        q/8VFUj/Rkb3/0ND1f8rKTP/+Ork//jq5P89Ojj/yb65//jq5P8IBwf4CwoK/Org2//Jvrn/PTo4//jq
        5P/46uT/TEha/ycnnv9OTv3/FBMh/+XY0v/46uT/sqik/1VQTv/46uT/g3x5/3l0cv/z5uH/VVBO/7Ko
        pP/46uT/5djS/wwMIP9CQvT/NTWq/1hTWv/46uT/+Ork/z06OP/Jvrn/+Ork/3hxb7MLCgr86uDb/8m+
        uf89Ojj/+Ork//jq5P+JgYD/HR11/0dH7/8RERf/+Ork//jq5P+yqKT/VVBO//jq5P+DfHn/eXRy//Pm
        4f9VUE7/sqik//jq5P/46uT/DAsX/zs75/8rK37/i4OA//jq5P/46uT/PTo4/8m+uf/46uT/8OPeigsK
        Cvzq4Nv/yb65/z06OP/46uT/+Ork/7asp/8WFk7/ODjF/zYzPv/46uT/+Ork/7KopP9VUE7/+Ork/4N8
        ef95dHL/8+bh/1VQTv+yqKT/+Ork//jq5P8qKD7/Ly+9/yYlUf+2rKf/+Ork//jq5P89Ojj/yb65//jq
        5P8aGRjqCwoK/Org2//Ow77/Qj49//jq5P/46uT/4dTP/w0NJf8qKpj/ZmFk//jq5P/46uT/t62o/1lU
        Uv/46uT/g3x5/3l0cv/z5uH/WVRS/7etqP/46uT/+Ork/1xXZf8kJJT/FBQl/+HUz//46uT/+Ork/0I+
        Pf/Ow77/+Ork/wgHB/gMCwv74NbS//jq5P/l2NL/+Ork//jq5P/x5N7/CAcQ/w4OMP+OhoP/9uji//jq
        5P/36eP/5tnT//jq5P9wamz/amVk//Pm4f/m2dP/9+nj//jq5P/z5eD/kIiE/w0NMP8JCRD/8eTe//jq
        5P/46uT/5djS//jq5P/u4dv/CAcH9hwaGtqNh4X/+Ork//jq5P/46uT/sKai/wQEA/8GBhb/EhJU/wIC
        Av9DPz7/+Ork//jq5P/46uT/8uTf/x8dJv8aGRr/7uLc//jq5P/46uT/+Ork/z06OP8BAQL/Dw9R/woK
        F/8FBAT/saej//jq5P/46uT/+Ork/52UkP4QDw7OAAAANRMSEvaKg4D96NvW//fp4/8vLCv/oZqY/zEv
        N/8BAQL/pZ+c/zQyMf+yqKT/+Ork/76zrv83NDj/HBtW/ygnWf87OTn/vrOu//jq5P+yqKT/NDIx/6eg
        nv8BAQL/MzE4/6KbmP8vLCv/9+nj/+jb1v+MhYH7DQ0M7gAAADX///8AAAAAIBAODqIMCwvyOTU09C0r
        Kv+9trP/FxcZ/S43Sf9gXFr/l5GO/yMhIf8mJCP/ODU0/yknMP8mJpv/MzOm/y8tMP84NTT/JiQj/yMh
        If+XkY7/YFxa/y43S/8VFRb8vbaz/y0rKv85NjTzCwsJ8gsLC58AAAAg////AP///wD///8A////AAAA
        AAkAAABbHBsb1wQEBP5RbaT/dp/p/yQnLv8aGBj/cmxp/9HFwP/46uT/hn9+/x0dc/8nJ3r/iYF+//jq
        5P/RxcD/cmxp/xkYGP8gJC3/c5zn/1VzqP8DAwP+GxoZ1gAAAFsAAAAJ////AP///wD///8A////AP//
        /wD///8A////AP///wAAAAABBgkN+hUdK/4PFBz/DhEY/5mQjP/46uT/+Ork//jq5P+zqaX/FRVL/xwc
        Tf+zqaX/+Ork//jq5P/46uT/lo2K/wwQGP8PExz/FBsp+wQGCfP///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AAoOFZUbJTj+U3Cm/2mO0P88Tm//MTI3//fp4//46uT/4dTP/4J7
        eP8BAQP/AQED/4J7eP/h1M//+Ork/9vOyf8WGR//Nklu/2iMz/9Ucqf/FBon8gMDBlD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wAAAAAVAwQH+2iM0v95pPD/eaTw/3mk8P8tN0j/nZSQ//jq
        5P9GQkD/IyIk/wwMM/8SEjX/JSQk/0ZCQf/46uT/c2xq/y8/X/92oOz/eaTw/3mk8P9misn/BggM5gAA
        AAb///8A////AP///wD///8A////AP///wD///8AAAAAMAkNE/QgLEH8dZ7r/3mk8P95pPD/eaTw/1Ft
        oP8DBAX/U1BT/ycmJf/a0s7/FBMU/hUUFf7c09D/KCYl/0NDSP8CAgP/VnOv/3mk8P95pPD/eaTw/3mk
        8P8TGibzCQwR8AAAAB7///8A////AP///wD///8A////AP///wAOExyjHSc7/yYzTv11nuv/eaTw/3mk
        8P95pPD/V3as/xwmOP4CAgL/RUJB/01KSf45R2P+PEpk/FFOTf5FQkH/BgcK/hcfL/xbe7r/eaTw/3mk
        8P95pPD/eaTw/xojNfYgK0H+AgQEfv///wD///8A////AP///wD///8A////AAAAAFcBAQH/GyQ3/l19
        uv9wl93/eaTw/3mk8P9Xdqz/AQIC/wgJDdwMCwuREBMa/Fx8uf9ggr7/DxEW9goJCZILDA/uAQEC/0Nb
        if9njM3/dqDq/3mk8P95pPD/GiIz9QEBAv4AAABI////AP///wD///8A////AP///wD///8AAAAARh4a
        Gf05NTn+IiIo+RARFvkYHiv1T2qd/h4oOPQjHx7/CwkJvgADA00AAAD/EBYg/Q4THfkAAAD/AAAAPBIQ
        D+E9NDP/KSkw/BkZHfkKDA/6MkNh9k5pnP4MDRD6ExAQ8gAAADf///8A////AP///wD///8A////AP//
        /wAAAAAUEA0N/HlnZP+HdHD/h3Rw/2hZVv8vLC/7QTk6/EU8Ov4FAwOnBQcK+FFtpP95o+//eaPv/1Ft
        oP8KDhLPFBIQvEs/Pv+Fcm7/h3Rw/39taf9KQD//KScr+mpbWP8MCwrvAAAAF////wD///8A////AP//
        /wD///8A////AP///wAXFBTnXE5M/4d0cP+HdHD/h3Rw/4d0cP+HdHD/ExAQ9AAAANcgLEL8dZ/r/3mk
        8P95pPD/eaTw/xMbJ+0BAADKJR8f/X1raP+HdHD/h3Rw/4d0cP+HdHD/a1xZ/wcGBuT///8A////AP//
        /wD///8A////AP///wD///8A////AAMDA1MQDg38XlBO/4d0cP+HdHD/fGtn/yslJPkAAAD/BwoP/j5U
        gP93ou7/eaTw/3mk8P95pPD/Ok9z+AsPF/4AAAD/OzIx/oJvbP+HdHD/h3Rw/3BgXf8ODAvxAAAARP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AAoKCjUPDQzvVklH33poZdEJCAfyCAgIngsQ
        F+UZIjT/P1WA/3ei7v95pPD/eaTw/3mk8P86T3X5GSEy/wYJDM0NCwu/DQsL+CciIfIZFhXsCAcF6QAA
        AEv///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAcAAAAC////AAAA
        AA////8ACgoKlwYGB/8YHy/9Nklr+Uhij/9wmN//eaTw/zNEZfYCAgP/AAAAcv///wAAAAAeAAAASQAA
        AC0AAAAC////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wAHBwaLPjQz/11QTv9QRUL/NzIy/goLDvsnNEv2EREU+TEqKfkAAABp////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AAAAAFUrJCP9fmto/4d0cP+HdHD/gG5q/1xPTP95aGX/IBwb7gAA
        AD3///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AAAAAFAoICPZjVFL/h3Rw/4d0cP+HdHD/h3Rw/2pb
        WP8HBwbnAAAACf///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAwMDUQ0LC/lRRUP/gG5q/4Bu
        av9WSkj8CQcH7wAAADz///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAKw4N
        DMQIBwf0CAYG7QkHB7IAAAAi////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAAAAeAAAAf4AAA/+AAAH/AAAA/gAAAH4AAAB+AAAAfgAAAH4AAAB/AAAA/wAAAP+AAAH/yg
        BD//4Af//+AH///gB///8A////gf//////8=
</value>
  </data>
</root>